// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: order.sql

package db

import (
	"context"
)

const createOrder = `-- name: CreateOrder :one
INSERT INTO orders (
  item_id,
  user_id
) VALUES (
  $1, $2
) RETURNING id, item_id, user_id, created_at
`

type CreateOrderParams struct {
	ItemID int64 `json:"item_id"`
	UserID int64 `json:"user_id"`
}

func (q *Queries) CreateOrder(ctx context.Context, arg CreateOrderParams) (Order, error) {
	row := q.db.QueryRowContext(ctx, createOrder, arg.ItemID, arg.UserID)
	var i Order
	err := row.Scan(
		&i.ID,
		&i.ItemID,
		&i.UserID,
		&i.CreatedAt,
	)
	return i, err
}

const getOrder = `-- name: GetOrder :one
SELECT id, item_id, user_id, created_at FROM orders
where id = $1 limit 1
`

func (q *Queries) GetOrder(ctx context.Context, id int64) (Order, error) {
	row := q.db.QueryRowContext(ctx, getOrder, id)
	var i Order
	err := row.Scan(
		&i.ID,
		&i.ItemID,
		&i.UserID,
		&i.CreatedAt,
	)
	return i, err
}
